var documenterSearchIndex = {"docs":
[{"location":"#Hard-Disks-Project-Documentation","page":"Hard Disks Project Documentation","title":"Hard Disks Project Documentation","text":"","category":"section"},{"location":"","page":"Hard Disks Project Documentation","title":"Hard Disks Project Documentation","text":"predictCollisionInCell(box::Box, p::Particle, row::Int, col::Int, currTime::Float64, currPartner::Int)\npredictCollisionInNeighborhood(box::Box, p::Particle)\npredictCollisionInNeighborhood(box::Box, p::Particle, dy::Int, dx::Int)\nhandleCollision!(box::Box, event::Event)\nupdateBox!(box::Box)\nupdateBox!(box::Box, ϕMax::Float64; steps::Int=1000000)","category":"page"},{"location":"#HardDisks.predictCollisionInCell-Tuple{Box, Particle, Int64, Int64, Float64, Int64}","page":"Hard Disks Project Documentation","title":"HardDisks.predictCollisionInCell","text":"predictCollisionInCell(box, p, row, col, currTime, currPartner)\n\nComputes the next collision time and partner of particle p against the particles inside the cell at (row,col).\n\nArguments\n\nbox::Box: the box containing the particle configuration and grid\np::Particle: the particle for which the prediction is computed\nrow::Int: the row position of the cell to check against\ncol::Int: the column position of the cell to check against\ncurrTime::Float64: the current time of an existing prediction for particle p\ncurrPartner::Int: the current partner of an existing prediction for particle p\n\nReturns\n\ncurrTime::Float64: the time of the next collision\ncurrPartner::Int: the index of the collision partner\n\n\n\n\n\n","category":"method"},{"location":"#HardDisks.predictCollisionInNeighborhood-Tuple{Box, Particle}","page":"Hard Disks Project Documentation","title":"HardDisks.predictCollisionInNeighborhood","text":"predictCollisionInNeighborhood(box, p)\n\nComputes the next collision time and partner of particle p against the particles inside an L-shaped neighborhood:\n\n|   | X | X |\n|   | p | X |\n|   |   | X |\n\nArguments\n\nbox::Box: the box containing the particle configuration and grid\np::Particle: the particle for which the prediction is computed\n\nReturns\n\ntime::Float64: the time of the next collision\npartner::Int: the index of the collision partner\n\n\n\n\n\n","category":"method"},{"location":"#HardDisks.predictCollisionInNeighborhood-Tuple{Box, Particle, Int64, Int64}","page":"Hard Disks Project Documentation","title":"HardDisks.predictCollisionInNeighborhood","text":"predictCollisionInNeighborhood(box, p, dy, dx)\n\nComputes the next collision time and partner of particle p against the particles inside a proper neighborhood:\n\n|   |   | X |\n|   | p | X |\n|   |   | X |\n\n| X | X | X |\n|   | p |   |\n|   |   |   |\n\n| X | X | X |\n|   | p | X |\n|   |   | X |\n\n| X | X | X |\n| X | X | X |\n| X | X | X |\n\nArguments\n\nbox::Box: the box containing the particle configuration and grid\np::Particle: the particle for which the prediction is computed\ndy::Int: the direction (sign) of the step the particle took while changing rows\ndx::Int: the direction (sign) of the step the particle took while changing columns\n\nReturns\n\ntime::Float64: the time of the next collision\npartner::Int: the index of the collision partner\n\n\n\n\n\n","category":"method"},{"location":"#HardDisks.handleCollision!-Tuple{Box, Event}","page":"Hard Disks Project Documentation","title":"HardDisks.handleCollision!","text":"handleCollision!(box, event)\n\nArguments\n\nbox::Box: the box containing the particle configuration, grid and event queue\nevent::Event: the collision event to handle; it can be a wall or particle collision\n\n\n\n\n\n","category":"method"},{"location":"#HardDisks.updateBox!-Tuple{Box}","page":"Hard Disks Project Documentation","title":"HardDisks.updateBox!","text":"updateBox!(box)\n\nHandles the next event in line and updates the event queue and the state of the particles involved.\n\nArguments\n\nbox::Box: the box containing the particle configuration, grid and event queue\n\n\n\n\n\n","category":"method"},{"location":"#HardDisks.updateBox!-Tuple{Box, Float64}","page":"Hard Disks Project Documentation","title":"HardDisks.updateBox!","text":"updateBox!(box, ϕMax, steps)\n\nCalls updateBox!(box) until the packing fraction reaches an upper limit or its relative increment gets lower than a given threshold\n\nThis is the main program loop. The algorithm follows this steps:\n\nGets the next event from the Indexed Minimum Priority Queue\nHandles the event according to its type\nFor a particle collision both particles get their velocities updated. Only the event of particle p gets updated. The partner gets its event updated to a CHECK\nFor a wall collision the particle involved gets its velocity and event updated\nFor a transfer event the particle involved gets its grid position updated\n\nArguments\n\nbox::Box: the box containing the particle configuration, grid and event queue\n\n\n\n\n\n","category":"method"}]
}
